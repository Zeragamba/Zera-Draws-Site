version: "3.9"

volumes:
  vol-database:
  vol-images:
  vol-client:

services:
  router:
    build: ./router
    depends_on:
      - server
      - og-injector

  server:
    build: ./server
    command: bin/rails s -p 3000 -b 0.0.0.0
    volumes:
      - vol-images:/opt/images:rw
    depends_on:
      - db
    environment:
      RAILS_ENV: "${APP_ENV}"

      CLIENT_URL: "${APP_URL}"
      SERVER_URL: "${APP_URL}/api"
      IMAGES_URL: "${APP_URL}/images"

      DB_HOST: db # internal docker host
      DB_PORT: 5432
      DB_NAME: "${DB_NAME}"
      DB_USER: "${DB_USER}"
      DB_PASS: "${DB_PASS}"

      TOKEN_SECRET: "${TOKEN_SECRET}"

      IMAGES_DIR: "/opt/images"

  client:
    build: ./client
    volumes:
      - vol-client:/opt/client/build:rw
    environment:
      NODE_ENV: "${APP_ENV}"
      REACT_APP_ENV: "${APP_ENV}"
      REACT_APP_SERVER_URL: "${APP_URL}/api"
    command: yarn build

  og-injector:
    build: ./og-injector
    volumes:
      - vol-client:/opt/client:ro
    environment:
      NODE_ENV: "${APP_ENV}"
      SERVER_URL: "http://server:3000" # internal docker url
      CLIENT_URL: "${APP_URL}"
      CLIENT_DIR: "/opt/client"

  db:
    image: postgres:15
    volumes:
      - vol-database:/var/lib/postgresql/data:rw
    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASS}"
