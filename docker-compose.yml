services:
  router:
    extends:
      file: docker-compose.shared.yml
      service: router
    ports:
      - "${DEV_ROUTER_PORT}:443"
    develop:
      watch:
        - action: rebuild
          path: ./router/nginx.conf

  server:
    extends:
      file: docker-compose.shared.yml
      service: server
    volumes:
      - ./server:/opt/server:rw
      - ./.volumes/images:/opt/images:rw
    environment:
      CLIENT_URL: "${DEV_CLIENT_URL}"
      SERVER_URL: "${DEV_ROUTER_URL}/api"
      IMAGES_URL: "${DEV_ROUTER_URL}/images"
    ports:
      - "${DEV_SERVER_PORT}:3000"

  client:
    extends:
      file: docker-compose.shared.yml
      service: client
    volumes:
      - ./client:/opt/client:rw
      - ./.volumes/client:/opt/client/dist:rw
      - "${SSL_CRT}:/opt/ssl/current.crt:ro"
      - "${SSL_KEY}:/opt/ssl/current.key:ro"
    environment:
      HTTPS: true
      SSL_CRT_FILE: /opt/ssl/current.crt
      SSL_KEY_FILE: /opt/ssl/current.key
      REACT_APP_SERVER_URL: "${DEV_ROUTER_URL}/api"
    command: yarn start
    ports:
      - "${DEV_CLIENT_PORT}:3000"

  og-injector:
    extends:
      file: docker-compose.shared.yml
      service: og-injector
    ports:
      - "${DEV_INJECTOR_PORT}:3000"
    volumes:
      - ./packages/og-injector-rust/target/debug/og-injector:/usr/bin/og-injector:ro
      - ./.volumes/client:/opt/client:ro
    develop:
      watch:
        - action: rebuild
          path: ./packages/og-injector/src

  db:
    extends:
      file: docker-compose.shared.yml
      service: db
    ports:
      - "${DEV_DB_PORT}:5432"
