version: "3.9"

services:
  router:
    build: ./router
    depends_on:
      - server
      - og-injector
    volumes:
      - ./router/conf.d:/etc/nginx/conf.d
      - ./.volumes/ssl:/opt/ssl
      - ./.volumes/images:/opt/images
      - ./.volumes/client:/opt/client
    ports:
      - "${NGINX_PORT}:443"

  server:
    build: ./server
    command: bin/rails s -p 3000 -b 0.0.0.0
    volumes:
      - ./.volumes/client:/opt/client
      - ./.volumes/images:/opt/images
    depends_on:
      - db
    environment:
      RAILS_ENV: production
      SERVER_URL: "https://${NGINX_HOST}/api"
      IMAGES_URL: "https://${NGINX_HOST}/images"
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: "${DB_NAME}"
      DB_USER: "${DB_USER}"
      DB_PASS: "${DB_PASS}"
      ADMIN_USER: "${ADMIN_USER}"
      ADMIN_EMAIL: "${ADMIN_EMAIL}"
      ADMIN_PASS: "${ADMIN_PASS}"
      TOKEN_SECRET: "${TOKEN_SECRET}"
      IMAGES_DIR: "/opt/images"
      CLIENT_DIR: "/opt/client"
      REACT_APP_ENV: production

  client:
    profiles: [ "build" ]
    build: ./client
    working_dir: /opt/client
    volumes:
      - ./.volumes/client:/opt/client/build
    environment:
      REACT_APP_SERVER_URL: "https://${NGINX_HOST}/api"
    command: yarn build

  og-injector:
    build: ./og-injector
    working_dir: /opt/og-injector
    volumes:
      - ./og-injector:/opt/og-injector
      - ./.volumes/client:/opt/client
    environment:
      SERVER_URL: "http://server:3000"
      CLIENT_URL: "https://${NGINX_HOST}"
      CLIENT_DIR: "/opt/client"
    command: yarn start

  db:
    image: postgres:15
    volumes:
      - ./.volumes/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASS}"
